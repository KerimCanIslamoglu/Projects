// <auto-generated />
using System;
using ImdbCore.Data.Concrete.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ImdbCore.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190509172746_Mig5")]
    partial class Mig5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ImdbCore.Models.Episodes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actors");

                    b.Property<string>("Awards");

                    b.Property<string>("Country");

                    b.Property<string>("Director");

                    b.Property<int>("Episode");

                    b.Property<string>("Genre");

                    b.Property<string>("Language");

                    b.Property<string>("Metascore");

                    b.Property<string>("Plot");

                    b.Property<string>("Poster");

                    b.Property<string>("Rated");

                    b.Property<string>("Released");

                    b.Property<bool>("Response");

                    b.Property<string>("Runtime");

                    b.Property<int>("Season");

                    b.Property<int?>("SeasonsId");

                    b.Property<string>("Title");

                    b.Property<string>("Type");

                    b.Property<string>("Writer");

                    b.Property<string>("Year");

                    b.Property<string>("imdbID");

                    b.Property<string>("imdbRating");

                    b.Property<string>("imdbVotes");

                    b.Property<string>("seriesID");

                    b.HasKey("Id");

                    b.HasIndex("SeasonsId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("ImdbCore.Models.KeyWords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("arananMovie");

                    b.Property<string>("arananSerie");

                    b.HasKey("Id");

                    b.ToTable("KeyWords");
                });

            modelBuilder.Entity("ImdbCore.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actors");

                    b.Property<string>("Awards");

                    b.Property<string>("BoxOffice");

                    b.Property<string>("Country");

                    b.Property<string>("DVD");

                    b.Property<string>("Director");

                    b.Property<string>("Genre");

                    b.Property<string>("Language");

                    b.Property<string>("Metascore");

                    b.Property<string>("Plot");

                    b.Property<string>("Poster");

                    b.Property<string>("Production");

                    b.Property<string>("Rated");

                    b.Property<string>("Released");

                    b.Property<bool>("Response");

                    b.Property<string>("Runtime");

                    b.Property<string>("Title");

                    b.Property<string>("Type");

                    b.Property<string>("Website");

                    b.Property<string>("Writer");

                    b.Property<string>("Year");

                    b.Property<string>("imdbID");

                    b.Property<string>("imdbRating");

                    b.Property<string>("imdbVotes");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("ImdbCore.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EpisodesId");

                    b.Property<int?>("MoviesId");

                    b.Property<int?>("SeriesId");

                    b.Property<string>("Source");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("EpisodesId");

                    b.HasIndex("MoviesId");

                    b.HasIndex("SeriesId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("ImdbCore.Models.SeasonEpisodes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Episode");

                    b.Property<string>("Released");

                    b.Property<int?>("SeasonsId");

                    b.Property<string>("Title");

                    b.Property<string>("imdbID");

                    b.Property<string>("imdbRating");

                    b.HasKey("Id");

                    b.HasIndex("SeasonsId");

                    b.ToTable("SeasonEpisodes");
                });

            modelBuilder.Entity("ImdbCore.Models.Seasons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Response");

                    b.Property<int>("Season");

                    b.Property<string>("Title");

                    b.Property<int>("totalSeasons");

                    b.HasKey("Id");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("ImdbCore.Models.Serie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actors");

                    b.Property<string>("Awards");

                    b.Property<string>("Country");

                    b.Property<string>("Director");

                    b.Property<string>("Genre");

                    b.Property<string>("Language");

                    b.Property<string>("Metascore");

                    b.Property<string>("Plot");

                    b.Property<string>("Poster");

                    b.Property<string>("Rated");

                    b.Property<string>("Released");

                    b.Property<bool>("Response");

                    b.Property<string>("Runtime");

                    b.Property<string>("Title");

                    b.Property<string>("Type");

                    b.Property<string>("Writer");

                    b.Property<string>("Year");

                    b.Property<string>("imdbID");

                    b.Property<string>("imdbRating");

                    b.Property<string>("imdbVotes");

                    b.Property<int>("totalSeasons");

                    b.HasKey("Id");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("ImdbCore.Models.Episodes", b =>
                {
                    b.HasOne("ImdbCore.Models.Seasons", "Seasons")
                        .WithMany()
                        .HasForeignKey("SeasonsId");
                });

            modelBuilder.Entity("ImdbCore.Models.Rating", b =>
                {
                    b.HasOne("ImdbCore.Models.Episodes", "Episodes")
                        .WithMany("Ratings")
                        .HasForeignKey("EpisodesId");

                    b.HasOne("ImdbCore.Models.Movie", "Movies")
                        .WithMany("Ratings")
                        .HasForeignKey("MoviesId");

                    b.HasOne("ImdbCore.Models.Serie", "Series")
                        .WithMany("Ratings")
                        .HasForeignKey("SeriesId");
                });

            modelBuilder.Entity("ImdbCore.Models.SeasonEpisodes", b =>
                {
                    b.HasOne("ImdbCore.Models.Seasons", "Seasons")
                        .WithMany("SeasonEpisodesS")
                        .HasForeignKey("SeasonsId");
                });
#pragma warning restore 612, 618
        }
    }
}
